name: Package CI

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "pkg/**"

jobs:
  determine-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-files.outputs.changed_directories }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v45.0.3
        with:
          matrix: "true"
          dir_names: "true"
          dir_names_max_depth: "1"
          path: ./pkg

      - name: Calculate changed directories
        run: |
          changed_directories=$(jq -n '${{ steps.changed-files.outputs.all_changed_and_modified_files }} - ${{ steps.changed-files.outputs.deleted_files }}')
          echo Changed directories (excluding deleted)
          echo $changed_directories
          echo "changed_directories=$changed_directories" >> $GITHUB_OUTPUT

  build-and-test:
    needs: determine-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.determine-changes.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.1"

      - name: Build package
        run: |
          cd ./pkg/${{ matrix.directory }}
          go build ./...

      - name: Test package
        run: |
          cd ./pkg/${{ matrix.directory }}
          go test ./...

  # This allows us to have a branch protection rule for tests and deploys with matrix
  ci-status:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: always()
    steps:
      - name: Successful build and test
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failed build and test
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
