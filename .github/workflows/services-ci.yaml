name: Services CI

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "services/**"

jobs:
  determine-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-files.outputs.all_changed_and_modified_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v45.0.3
        with:
          matrix: "true"
          dir_names: "true"

      - name: Log changed directories
        run: |
          echo Modified directories
          echo ${{ steps.changed-files.outputs.all_changed_and_modified_files }}

  build-and-test:
    needs: determine-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.determine-changes.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.1"

      - name: SAM build
        run: |
          # cd ${{ matrix.directory }}
          # go build ./...
          echo $(pwd)
          sam build

      - name: Test package
        run: |
          cd ${{ matrix.directory }}
          go test ./...

      # TODO: This won't be neccesary for packages as we can use a git commit
      # sha as the package version.
      # However, this may be useful for ephemeral service builds. Keeping the
      # code around for the time being.
      # - name: Normalize branch name
      #   id: branch_name
      #   run: |
      #     branch_name="$GITHUB_HEAD_REF"
      #     normalized_branch_name="${branch_name//\//-}"
      #     echo "Normalized branch name: $normalized_branch_name"
      #     echo "normalized_branch_name=$normalized_branch_name" >> $GITHUB_ENV

      # - name: Set short git commit SHA
      #   id: short_sha
      #   run: |
      #     calculated_sha=$(git rev-parse --short ${{ github.sha }})
      #     echo "Calculated short sha: $calculated_sha"
      #     echo "commit_short_sha=$calculated_sha" >> $GITHUB_ENV

      # - name: Create GitHub Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     tag_name: ${{ matrix.directory }}/${{ env.latest_version }}-${{ env.normalized_branch_name }}.${{ env.commit_short_sha }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
