AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Pager Gateway Service

Parameters:
  Environment:
    Type: String
    Description: Deployment environment (dev or prod)
  AuthorizerFunctionArn:
    Type: String
  AgencyServiceApiId:
    Type: String
  PageServiceApiId:
    Type: String

Resources:
  ApiGateway:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: !Sub "pager-gateway-${Environment}"
      Auth:
        Authorizers:
          ApiGatewayAuthorizer:
            AuthorizerPayloadFormatVersion: 2.0
            FunctionArn: !Ref AuthorizerFunctionArn
      StageName: !Ref Environment

  ###########################################################################
  # ROUTES
  ###########################################################################

  AgencyServiceRootRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGateway
      RouteKey: ANY /agencies/{proxy+}
      Target: !Sub integrations/${AgencyServiceRootIntegration}

  # Agency Service Pages Sub Resource
  PageServiceAgencyRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGateway
      RouteKey: ANY /agencies/{agencyid}/pages/{proxy+}
      Target: !Sub integrations/${PageServiceAgencyIntegration}

  PageServiceRootRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGateway
      RouteKey: ANY /pages/{proxy+}
      Target: !Sub integrations/${PageServiceRootIntegration}

  ###########################################################################
  # INTEGRATIONS
  ###########################################################################

  AgencyServiceRootIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      IntegrationType: HTTP_PROXY
      IntegrationMethod: ANY
      IntegrationUri: !Sub https://${AgencyServiceApiId}.execute-api.${AWS::Region}.amazonaws.com/
      PayloadFormatVersion: "1.0"
      RequestParameters:
        overwrite:path: !Sub ${Environment}/${!request.path.proxy}
        append:header.x-pager-userid: $context.authorizer.userid
        append:header.x-pager-userinfo: $context.authorizer.userinfo

  PageServiceAgencyIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      IntegrationType: HTTP_PROXY
      IntegrationMethod: ANY
      IntegrationUri: !Sub https://${PageServiceApiId}.execute-api.${AWS::Region}.amazonaws.com/
      PayloadFormatVersion: "1.0"
      RequestParameters:
        overwrite:path: !Sub ${Environment}/agencies/${!request.path.agencyid}/${!request.path.proxy}
        append:header.x-pager-userid: $context.authorizer.userid
        append:header.x-pager-userinfo: $context.authorizer.userinfo

  PageServiceRootIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      IntegrationType: HTTP_PROXY
      IntegrationMethod: ANY
      IntegrationUri: !Sub https://${PageServiceApiId}.execute-api.${AWS::Region}.amazonaws.com/
      PayloadFormatVersion: "1.0"
      RequestParameters:
        overwrite:path: !Sub ${Environment}/${!request.path.proxy}
        append:header.x-pager-userid: $context.authorizer.userid
        append:header.x-pager-userinfo: $context.authorizer.userinfo

Outputs:
  ApiGatewayUrl:
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}"

  ApiGatewayId:
    Value: !Ref ApiGateway
    Export:
      Name: ApiGatewayId
