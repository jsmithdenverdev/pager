AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Pager Gateway Service

Parameters:
  Environment:
    Type: String
    Description: Deployment environment (dev or prod)
  AuthorizerFunctionArn:
    Type: String
  AgencyServiceApiId:
    Type: String

Resources:
  ApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub "pager-gateway-${Environment}"
      ProtocolType: HTTP

  ApiGatewayAuthorizer:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId: !Ref ApiGateway
      AuthorizerType: REQUEST
      IdentitySource:
        - $request.header.Authorization
      Name: !Sub "pager-gateway-authorizer-${Environment}"
      AuthorizerUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AuthorizerFunctionArn}/invocations
      AuthorizerPayloadFormatVersion: "2.0"

  ApiGatewayAuthorizerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AuthorizerFunctionArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/authorizers/${ApiGatewayAuthorizer}

  ApiGatewayStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref ApiGateway
      StageName: !Ref Environment
      AutoDeploy: true

  ###########################################################################
  # ROUTES
  ###########################################################################

  AgencyServiceRootRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGateway
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref ApiGatewayAuthorizer
      RouteKey: ANY /agencies
      Target: !Sub integrations/${AgencyServiceRootIntegration}

  AgencyServiceWildCardRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGateway
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref ApiGatewayAuthorizer
      RouteKey: ANY /agencies/{proxy+}
      Target: !Sub integrations/${AgencyServiceWildCardIntegration}

  ###########################################################################
  # INTEGRATIONS
  ###########################################################################

  AgencyServiceRootIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      IntegrationType: HTTP_PROXY
      IntegrationMethod: ANY
      IntegrationUri: !Sub https://${AgencyServiceApiId}.execute-api.${AWS::Region}.amazonaws.com/${Environment}
      PayloadFormatVersion: "1.0"
      RequestParameters:
        append:header.x-pager-userid: $context.authorizer.userid
        append:header.x-pager-userinfo: $context.authorizer.userinfo

  AgencyServiceWildCardIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      Description: Agency API wild card proxy integration
      IntegrationType: HTTP_PROXY
      IntegrationMethod: ANY
      IntegrationUri: !Sub https://${AgencyServiceApiId}.execute-api.${AWS::Region}.amazonaws.com/${Environment}
      PayloadFormatVersion: "1.0"
      RequestParameters:
        overwrite:path: ${request.path.proxy}
        append:header.x-pager-userid: $context.authorizer.userid
        append:header.x-pager-userinfo: $context.authorizer.userinfo

Outputs:
  ApiGatewayUrl:
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}"
