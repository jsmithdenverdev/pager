version: "3"

# This Taskfile organizes commands for the Pager microservices architecture.
# It is structured in two main sections:
# 1. Common Tasks: Global and shared task definitions
# 2. Service-Specific Tasks: Organized by service (agency, endpoint, events, gateway, page, user)

vars:
  AWS_PROFILE_DEFAULT: localstack

tasks:
  ###############################################################################
  # Common Tasks
  # These tasks are either used as building blocks for service-specific tasks
  # or operate at the global level across all services
  ###############################################################################

  # Private Tasks - Used as building blocks for service-specific tasks
  test:mocks:
    private: true
    desc: Generate mocks using mockery
    dir: "{{.DIR}}"
    cmds:
      - mockery --dir {{.DIR}} --all --output {{.DIR}}/mocks

  test:unit:
    private: true
    desc: Run unit tests
    dir: "{{.DIR}}"
    cmds:
      - go test -v ./...

  test:unit:coverage:
    private: true
    desc: Run unit tests with coverage
    dir: "{{.DIR}}"
    cmds:
      - go test -v -coverprofile=coverage.out ./...
      - go tool cover -html=coverage.out -o coverage.html

  lint:
    private: true
    desc: Run golangci-lint
    dir: "{{.DIR}}"
    cmds:
      - golangci-lint run {{.DIR}}/...

  mod:tidy:
    private: true
    desc: Run go mod tidy
    dir: "{{.DIR}}"
    cmds:
      - go mod tidy

  sam:build:
    private: true
    desc: Execute SAM build
    dir: "{{.DIR}}"
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - AWS_PROFILE={{.AWS_PROFILE}} sam build

  sam:validate:
    private: true
    desc: Execute SAM validate
    dir: "{{.DIR}}"
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - AWS_PROFILE={{.AWS_PROFILE}} sam validate --lint

  sam:deploy:
    private: true
    desc: Execute SAM deploy
    dir: "{{.DIR}}"
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    deps: [sam:build, sam:validate]
    cmds:
      - task: sam:build
      - task: sam:validate
      - AWS_PROFILE={{.AWS_PROFILE}} sam deploy

  # Global Tasks - Operate across all services
  sam:build:all:
    desc: Execute SAM build from root
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - AWS_PROFILE={{.AWS_PROFILE}} sam build

  sam:validate:all:
    desc: Execute SAM validate from root
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - AWS_PROFILE={{.AWS_PROFILE}} sam validate

  sam:deploy:all:
    desc: Execute SAM deploy from root
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:build:all
      - task: sam:validate:all
      - AWS_PROFILE={{.AWS_PROFILE}} sam deploy

  # Convenience tasks to run operations across all services
  test:mocks:all:
    desc: Generate mocks for all services
    cmds:
      - task: test:mocks:agency
      - task: test:mocks:endpoint
      - task: test:mocks:gateway
      - task: test:mocks:page
      - task: test:mocks:user

  test:unit:all:
    desc: Run unit tests for all services
    cmds:
      - task: test:unit:agency
      - task: test:unit:endpoint
      - task: test:unit:gateway
      - task: test:unit:page
      - task: test:unit:user

  lint:all:
    desc: Run linter for all services
    cmds:
      - task: lint:agency
      - task: lint:endpoint
      - task: lint:gateway
      - task: lint:page
      - task: lint:user

  mod:tidy:all:
    desc: Run go mod tidy for all services
    cmds:
      - task: mod:tidy:agency
      - task: mod:tidy:endpoint
      - task: mod:tidy:gateway
      - task: mod:tidy:page
      - task: mod:tidy:user

  ###############################################################################
  # Agency Service
  # Handles agency-related functionality including agency management,
  # configuration, and relationships
  ###############################################################################
  test:mocks:agency:
    desc: Generate mocks for agency service
    cmds:
      - task: test:mocks
        vars:
          DIR: services/agency

  test:unit:agency:
    desc: Run unit tests for agency service
    cmds:
      - task: test:unit
        vars:
          DIR: services/agency

  test:unit:coverage:agency:
    desc: Run unit tests with coverage for agency service
    cmds:
      - task: test:unit:coverage
        vars:
          DIR: services/agency

  lint:agency:
    desc: Run linter for agency service
    cmds:
      - task: lint
        vars:
          DIR: services/agency

  mod:tidy:agency:
    desc: Run go mod tidy for agency service
    cmds:
      - task: mod:tidy
        vars:
          DIR: services/agency

  sam:build:agency:
    desc: Execute SAM build for agency service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:build
        vars:
          DIR: services/agency
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  sam:validate:agency:
    desc: Execute SAM validate for agency service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:validate
        vars:
          DIR: services/agency
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  sam:deploy:agency:
    desc: Execute SAM deploy for agency service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    deps: [sam:build:agency, sam:validate:agency]
    cmds:
      - task: sam:deploy
        vars:
          DIR: services/agency
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  ###############################################################################
  # Endpoint Service
  # Manages API endpoints and request handling
  ###############################################################################
  test:mocks:endpoint:
    desc: Generate mocks for endpoint service
    cmds:
      - task: test:mocks
        vars:
          DIR: services/endpoint

  test:unit:endpoint:
    desc: Run unit tests for endpoint service
    cmds:
      - task: test:unit
        vars:
          DIR: services/endpoint

  test:unit:coverage:endpoint:
    desc: Run unit tests with coverage for endpoint service
    cmds:
      - task: test:unit:coverage
        vars:
          DIR: services/endpoint

  lint:endpoint:
    desc: Run linter for endpoint service
    cmds:
      - task: lint
        vars:
          DIR: services/endpoint

  mod:tidy:endpoint:
    desc: Run go mod tidy for endpoint service
    cmds:
      - task: mod:tidy
        vars:
          DIR: services/endpoint

  sam:build:endpoint:
    desc: Execute SAM build for endpoint service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:build
        vars:
          DIR: services/endpoint
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  sam:validate:endpoint:
    desc: Execute SAM validate for endpoint service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:validate
        vars:
          DIR: services/endpoint
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  sam:deploy:endpoint:
    desc: Execute SAM deploy for endpoint service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    deps: [sam:build:endpoint, sam:validate:endpoint]
    cmds:
      - task: sam:deploy
        vars:
          DIR: services/endpoint
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  ###############################################################################
  # Events Service
  # Handles event processing and distribution across services
  # This service is only an AWS SAM template with no relevant code
  ###############################################################################
  sam:build:events:
    desc: Execute SAM build for events service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:build
        vars:
          DIR: services/events
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  sam:validate:events:
    desc: Execute SAM validate for events service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:validate
        vars:
          DIR: services/events
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  sam:deploy:events:
    desc: Execute SAM deploy for events service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    deps: [sam:build:events, sam:validate:events]
    cmds:
      - task: sam:deploy
        vars:
          DIR: services/events
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  ###############################################################################
  # Gateway Service
  # Provides API gateway functionality and request routing
  ###############################################################################
  test:mocks:gateway:
    desc: Generate mocks for gateway service
    cmds:
      - task: test:mocks
        vars:
          DIR: services/gateway

  test:unit:gateway:
    desc: Run unit tests for gateway service
    cmds:
      - task: test:unit
        vars:
          DIR: services/gateway

  test:unit:coverage:gateway:
    desc: Run unit tests with coverage for gateway service
    cmds:
      - task: test:unit:coverage
        vars:
          DIR: services/gateway

  lint:gateway:
    desc: Run linter for gateway service
    cmds:
      - task: lint
        vars:
          DIR: services/gateway

  mod:tidy:gateway:
    desc: Run go mod tidy for gateway service
    cmds:
      - task: mod:tidy
        vars:
          DIR: services/gateway

  sam:build:gateway:
    desc: Execute SAM build for gateway service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:build
        vars:
          DIR: services/gateway
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  sam:validate:gateway:
    desc: Execute SAM validate for gateway service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:validate
        vars:
          DIR: services/gateway
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  sam:deploy:gateway:
    desc: Execute SAM deploy for gateway service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    deps: [sam:build:gateway, sam:validate:gateway]
    cmds:
      - task: sam:deploy
        vars:
          DIR: services/gateway
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  ###############################################################################
  # Page Service
  # Handles page creation, management, and delivery functionality
  ###############################################################################
  test:mocks:page:
    desc: Generate mocks for page service
    cmds:
      - task: test:mocks
        vars:
          DIR: services/page

  test:unit:page:
    desc: Run unit tests for page service
    cmds:
      - task: test:unit
        vars:
          DIR: services/page

  test:unit:coverage:page:
    desc: Run unit tests with coverage for page service
    cmds:
      - task: test:unit:coverage
        vars:
          DIR: services/page

  lint:page:
    desc: Run linter for page service
    cmds:
      - task: lint
        vars:
          DIR: services/page

  mod:tidy:page:
    desc: Run go mod tidy for page service
    cmds:
      - task: mod:tidy
        vars:
          DIR: services/page

  sam:build:page:
    desc: Execute SAM build for page service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:build
        vars:
          DIR: services/page
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  sam:validate:page:
    desc: Execute SAM validate for page service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:validate
        vars:
          DIR: services/page
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  sam:deploy:page:
    desc: Execute SAM deploy for page service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    deps: [sam:build:page, sam:validate:page]
    cmds:
      - task: sam:deploy
        vars:
          DIR: services/page
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  ###############################################################################
  # User Service
  # Manages user profiles, preferences, and user-related operations
  ###############################################################################
  test:mocks:user:
    desc: Generate mocks for user service
    cmds:
      - task: test:mocks
        vars:
          DIR: services/user

  test:unit:user:
    desc: Run unit tests for user service
    cmds:
      - task: test:unit
        vars:
          DIR: services/user

  test:unit:coverage:user:
    desc: Run unit tests with coverage for user service
    cmds:
      - task: test:unit:coverage
        vars:
          DIR: services/user

  lint:user:
    desc: Run linter for user service
    cmds:
      - task: lint
        vars:
          DIR: services/user

  mod:tidy:user:
    desc: Run go mod tidy for user service
    cmds:
      - task: mod:tidy
        vars:
          DIR: services/user

  sam:build:user:
    desc: Execute SAM build for user service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:build
        vars:
          DIR: services/user
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  sam:validate:user:
    desc: Execute SAM validate for user service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    cmds:
      - task: sam:validate
        vars:
          DIR: services/user
          AWS_PROFILE: "{{.AWS_PROFILE}}"

  sam:deploy:user:
    desc: Execute SAM deploy for user service
    vars:
      AWS_PROFILE: "{{.AWS_PROFILE | default .AWS_PROFILE_DEFAULT}}"
    deps: [sam:build:user, sam:validate:user]
    cmds:
      - task: sam:deploy
        vars:
          DIR: services/user
          AWS_PROFILE: "{{.AWS_PROFILE}}"
